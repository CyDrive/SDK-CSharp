// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: models/file_info.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CyDrive.Models {

  /// <summary>Holder for reflection information generated from models/file_info.proto</summary>
  public static partial class FileInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for models/file_info.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FileInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZtb2RlbHMvZmlsZV9pbmZvLnByb3RvEgZtb2RlbHMaH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8igwEKCEZpbGVJbmZvEhEKCWZpbGVfcGF0",
            "aBgBIAEoCRIMCgRzaXplGAIgASgDEi8KC21vZGlmeV90aW1lGAMgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZpc19kaXIYBCABKAgSFQoN",
            "aXNfY29tcHJlc3NlZBgFIAEoCCI4CgxGaWxlSW5mb0xpc3QSKAoOZmlsZV9p",
            "bmZvX2xpc3QYASADKAsyEC5tb2RlbHMuRmlsZUluZm9CLFoZZ2l0aHViLmNv",
            "bS9DeURyaXZlL21vZGVsc6oCDkN5RHJpdmUuTW9kZWxzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CyDrive.Models.FileInfo), global::CyDrive.Models.FileInfo.Parser, new[]{ "FilePath", "Size", "ModifyTime", "IsDir", "IsCompressed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CyDrive.Models.FileInfoList), global::CyDrive.Models.FileInfoList.Parser, new[]{ "FileInfoList_" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FileInfo : pb::IMessage<FileInfo> {
    private static readonly pb::MessageParser<FileInfo> _parser = new pb::MessageParser<FileInfo>(() => new FileInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CyDrive.Models.FileInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo(FileInfo other) : this() {
      filePath_ = other.filePath_;
      size_ = other.size_;
      modifyTime_ = other.modifyTime_ != null ? other.modifyTime_.Clone() : null;
      isDir_ = other.isDir_;
      isCompressed_ = other.isCompressed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfo Clone() {
      return new FileInfo(this);
    }

    /// <summary>Field number for the "file_path" field.</summary>
    public const int FilePathFieldNumber = 1;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "modify_time" field.</summary>
    public const int ModifyTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp modifyTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ModifyTime {
      get { return modifyTime_; }
      set {
        modifyTime_ = value;
      }
    }

    /// <summary>Field number for the "is_dir" field.</summary>
    public const int IsDirFieldNumber = 4;
    private bool isDir_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDir {
      get { return isDir_; }
      set {
        isDir_ = value;
      }
    }

    /// <summary>Field number for the "is_compressed" field.</summary>
    public const int IsCompressedFieldNumber = 5;
    private bool isCompressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCompressed {
      get { return isCompressed_; }
      set {
        isCompressed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FilePath != other.FilePath) return false;
      if (Size != other.Size) return false;
      if (!object.Equals(ModifyTime, other.ModifyTime)) return false;
      if (IsDir != other.IsDir) return false;
      if (IsCompressed != other.IsCompressed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (modifyTime_ != null) hash ^= ModifyTime.GetHashCode();
      if (IsDir != false) hash ^= IsDir.GetHashCode();
      if (IsCompressed != false) hash ^= IsCompressed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FilePath);
      }
      if (Size != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (modifyTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ModifyTime);
      }
      if (IsDir != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsDir);
      }
      if (IsCompressed != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsCompressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (modifyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModifyTime);
      }
      if (IsDir != false) {
        size += 1 + 1;
      }
      if (IsCompressed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileInfo other) {
      if (other == null) {
        return;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.modifyTime_ != null) {
        if (modifyTime_ == null) {
          modifyTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ModifyTime.MergeFrom(other.ModifyTime);
      }
      if (other.IsDir != false) {
        IsDir = other.IsDir;
      }
      if (other.IsCompressed != false) {
        IsCompressed = other.IsCompressed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FilePath = input.ReadString();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
          case 26: {
            if (modifyTime_ == null) {
              modifyTime_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(modifyTime_);
            break;
          }
          case 32: {
            IsDir = input.ReadBool();
            break;
          }
          case 40: {
            IsCompressed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileInfoList : pb::IMessage<FileInfoList> {
    private static readonly pb::MessageParser<FileInfoList> _parser = new pb::MessageParser<FileInfoList>(() => new FileInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CyDrive.Models.FileInfoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfoList(FileInfoList other) : this() {
      fileInfoList_ = other.fileInfoList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileInfoList Clone() {
      return new FileInfoList(this);
    }

    /// <summary>Field number for the "file_info_list" field.</summary>
    public const int FileInfoList_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::CyDrive.Models.FileInfo> _repeated_fileInfoList_codec
        = pb::FieldCodec.ForMessage(10, global::CyDrive.Models.FileInfo.Parser);
    private readonly pbc::RepeatedField<global::CyDrive.Models.FileInfo> fileInfoList_ = new pbc::RepeatedField<global::CyDrive.Models.FileInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CyDrive.Models.FileInfo> FileInfoList_ {
      get { return fileInfoList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fileInfoList_.Equals(other.fileInfoList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fileInfoList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fileInfoList_.WriteTo(output, _repeated_fileInfoList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fileInfoList_.CalculateSize(_repeated_fileInfoList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileInfoList other) {
      if (other == null) {
        return;
      }
      fileInfoList_.Add(other.fileInfoList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fileInfoList_.AddEntriesFrom(input, _repeated_fileInfoList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
